loranjnnkakmfnas;lmsa/mlNG:jkngajk;ng;jkangjds
Gadgj;kgna;jkdg;jajdgj;landg;lgan
gds'dgbnagdjk;dna;jkngd;alngda
agdgdmamng;kjdangdangda'nagjadnad
adagn;jadgn'adgj
adgmadgkngad/lk/ngadndga
gadngadlngd'akgd'amdk'gaadg

agad/lmgdna'mngda'dgnadgn
kldgan
kjdangdangdagadndngda
nkgdgdakdagln'ladgjngd'ladgjngdngdagadgnalgna'lgdn'adgj
ag




`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 02/17/2024 05:17:54 PM
// Design Name: 
// Module Name: stopwatch
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module stopwatch
    (
    input clock,
    input start_pause_continue,
    input reset_input,
    output [7:0]AN,
    output [6:0]sseg,
    output DP
    

    );
    
    reg [1:0]toggle_start;
    
    always@ (posedge clock)
        begin
            if(toggle_input & toggle_start)
                toggle_start <= 2'b10;
            else if(toggle_input & ~toggle_start)
                toggle_start <= 2'b11;
            else if(reset_signal)
                toggle_start <= 2'b00;
            
    
    end
    
    button toggle_butt
    (
         .clk(clock),
         .in(start_pause_continue),
         .out(toggle_input)

    );
    
     button b_reset
    (
         .clk(clock),
         .in(reset_input),
         .out(reset_signal)

    );
    
    
    assign reset = 1'b1;
     timer_parameter #(1000000) onethousandth_ofa_sec
    (
        .clk(clock),
        .enable(toggle_start[0]),
        .reset_n(toggle_start[1]),
        .done(timer_to_counter_enable)
    );
    wire [7:0] minutes,seconds,hundreds;

    multi_decade_counter hundreds_of_seconds
    (
        .clk(clock),
        .reset_n(toggle_start[1]),
        .enable(timer_to_counter_enable),
        .done(hundreds_to_seconds),
        .ones(hundreds[3:0]),
        .tens(hundreds[7:4])
    );
    
    s59_decade_counter seconds_seconds
    (
        .clk(clock),
        .reset_n(toggle_start[1]),
        .enable(hundreds_to_seconds),
        .done(seconds_to_minutes),
        .ones(seconds[3:0]),
        .tens(seconds[7:4])
    );
    
    s59_decade_counter minute_of_seconds
    (
        .clk(clock),
        .reset_n(toggle_start[1]),
        .enable(seconds_to_minutes),
        .done(donezo),
        .ones(minutes[3:0]),
        .tens(minutes[7:4])
    );
    
    sseg_driver display
    (
    
        .clk(clock),
        .mux_in0({1'b1,hundreds[3:0],1'b1}),
        .mux_in1({1'b1,hundreds[7:4],1'b1}),
        .mux_in2({1'b1,seconds[3:0],1'b0}),
        .mux_in3({1'b1,seconds[7:4],1'b1}),
        .mux_in4({1'b1,minutes[3:0],1'b0}),
        .mux_in5({1'b1,minutes[7:4],1'b1}),
        .mux_in6(6'b000001),
        .mux_in7(6'b000001),
        .AN(AN),
        .sseg(sseg),
        .DP(DP)
    
    
    
    
    );
endmodule
